{"version":3,"file":"_layout.svelte-COlI_DTb.js","sources":["../../../.svelte-kit/adapter-node/entries/pages/_layout.svelte.js"],"sourcesContent":["import { C as store_get, D as ensure_array_like, E as attr, F as unsubscribe_stores, G as bind_props, B as pop, z as push, I as fallback, J as head, K as slot } from \"../../chunks/index2.js\";\nimport { n as normaliseBase, p as parseRoute, s as serializeRoute, g as getHrefBetween, i as i18n } from \"../../chunks/i18n.js\";\nimport { p as page } from \"../../chunks/stores.js\";\nimport { b as base } from \"../../chunks/paths.js\";\nimport { k as get } from \"../../chunks/exports.js\";\nimport \"../../chunks/constants.js\";\nimport { s as setParaglideContext, u as user } from \"../../chunks/session.js\";\nimport \"@inlang/paraglide-js/internal/adapter-utils\";\nimport { S as Svelte_seo } from \"../../chunks/index3.js\";\nfunction isExternal(url, currentUrl, base2) {\n  const absoluteBase = new URL(base2 ?? \"/\", currentUrl).pathname;\n  return url.origin !== currentUrl.origin || !url.pathname.startsWith(absoluteBase);\n}\nfunction AlternateLinks($$payload, $$props) {\n  push();\n  var $$store_subs;\n  let localisedPath, canonicalPath, alternateLinks;\n  const absoluteBase = normaliseBase(base, new URL(store_get($$store_subs ??= {}, \"$page\", page).url)) || \"/\";\n  let availableLanguageTags = $$props[\"availableLanguageTags\"];\n  let strategy = $$props[\"strategy\"];\n  let currentLang = $$props[\"currentLang\"];\n  const getAlternateLinks = (canonicalPath2, strategy2) => {\n    const links = [];\n    for (const lang of availableLanguageTags) {\n      const localisedPath2 = strategy2.getLocalisedPath(canonicalPath2, lang);\n      const fullPath = serializeRoute(localisedPath2, absoluteBase, void 0);\n      const link = new URL(fullPath, new URL(store_get($$store_subs ??= {}, \"$page\", page).url)).href;\n      links.push(link);\n    }\n    return links;\n  };\n  localisedPath = parseRoute(store_get($$store_subs ??= {}, \"$page\", page).url.pathname, absoluteBase)[0];\n  canonicalPath = strategy.getCanonicalPath(localisedPath, currentLang);\n  alternateLinks = getAlternateLinks(canonicalPath, strategy);\n  if (availableLanguageTags.length >= 1) {\n    $$payload.out += \"<!--[-->\";\n    const each_array = ensure_array_like(alternateLinks);\n    $$payload.out += `<!--[-->`;\n    for (let i = 0, $$length = each_array.length; i < $$length; i++) {\n      let href = each_array[i];\n      $$payload.out += `<link rel=\"alternate\"${attr(\"hreflang\", availableLanguageTags[i])}${attr(\"href\", href)}>`;\n    }\n    $$payload.out += `<!--]-->`;\n  } else {\n    $$payload.out += \"<!--[!-->\";\n  }\n  $$payload.out += `<!--]-->`;\n  if ($$store_subs) unsubscribe_stores($$store_subs);\n  bind_props($$props, { availableLanguageTags, strategy, currentLang });\n  pop();\n}\nfunction ParaglideJS($$payload, $$props) {\n  push();\n  var $$store_subs;\n  let lang;\n  const absoluteBase = normaliseBase(base, new URL(store_get($$store_subs ??= {}, \"$page\", page).url)) || \"/\";\n  let languageTag = fallback($$props[\"languageTag\"], () => void 0, true);\n  let i18n2 = $$props[\"i18n\"];\n  function translateHref(href, hreflang) {\n    try {\n      const localisedCurrentUrl = new URL(get(page).url);\n      const [localisedCurrentPath, suffix] = parseRoute(localisedCurrentUrl.pathname, absoluteBase);\n      const canonicalCurrentPath = i18n2.strategy.getCanonicalPath(localisedCurrentPath, lang);\n      const canonicalCurrentUrl = new URL(localisedCurrentUrl);\n      canonicalCurrentUrl.pathname = serializeRoute(canonicalCurrentPath, absoluteBase, suffix);\n      const original_to = new URL(href, new URL(canonicalCurrentUrl));\n      if (isExternal(original_to, localisedCurrentUrl, absoluteBase) || i18n2.config.exclude(original_to.pathname)) return href;\n      const targetLanguage = hreflang ?? lang;\n      const [canonicalPath, dataSuffix] = parseRoute(original_to.pathname, absoluteBase);\n      const translatedPath = i18n2.strategy.getLocalisedPath(canonicalPath, targetLanguage);\n      const to = new URL(original_to);\n      to.pathname = serializeRoute(translatedPath, absoluteBase, dataSuffix);\n      return getHrefBetween(localisedCurrentUrl, to);\n    } catch (error) {\n      return href;\n    }\n  }\n  setParaglideContext({ translateHref });\n  lang = languageTag ?? i18n2.getLanguageFromUrl(store_get($$store_subs ??= {}, \"$page\", page).url);\n  head($$payload, ($$payload2) => {\n    if (i18n2.config.seo.noAlternateLinks !== true && !i18n2.config.exclude(store_get($$store_subs ??= {}, \"$page\", page).url.pathname)) {\n      $$payload2.out += \"<!--[-->\";\n      AlternateLinks($$payload2, {\n        availableLanguageTags: i18n2.config.runtime.availableLanguageTags,\n        strategy: i18n2.strategy,\n        currentLang: lang\n      });\n    } else {\n      $$payload2.out += \"<!--[!-->\";\n    }\n    $$payload2.out += `<!--]-->`;\n  });\n  $$payload.out += `<!---->`;\n  {\n    $$payload.out += `<!---->`;\n    slot($$payload, $$props, \"default\", {});\n    $$payload.out += `<!---->`;\n  }\n  $$payload.out += `<!---->`;\n  if ($$store_subs) unsubscribe_stores($$store_subs);\n  bind_props($$props, { languageTag, i18n: i18n2 });\n  pop();\n}\nfunction _layout($$payload, $$props) {\n  push();\n  let { children, data } = $$props;\n  user.set(data.locals.user);\n  $$payload.out += `<!---->`;\n  {\n    Svelte_seo($$payload, {\n      title: \"FluffWorks | Website\",\n      description: \"Work in progress FluffWorks Website\",\n      keywords: \"fluffworks website furry company kemono furries fluffy fantasy video games game videos society board utility dev development web site services projects service project kemonomimi uwu owo\",\n      openGraph: {\n        images: [{ url: \"/logo.png\" }],\n        title: \"FluffWorks | Website\",\n        description: \"Work in progress FluffWorks Website\",\n        site_name: \"FluffWorks\"\n      },\n      applicationName: \"FluffWorks\",\n      twitter: {\n        card: \"app\",\n        creator: \"FluffWorks\",\n        description: \"Work in progress FluffWorks Website\",\n        image: \"/logo.png\",\n        title: \"FluffWorks | Website\"\n      }\n    });\n  }\n  $$payload.out += `<!----> `;\n  ParaglideJS($$payload, {\n    i18n,\n    children: ($$payload2) => {\n      children($$payload2);\n      $$payload2.out += `<!---->`;\n    },\n    $$slots: { default: true }\n  });\n  $$payload.out += `<!---->`;\n  pop();\n}\nexport {\n  _layout as default\n};\n"],"names":["normaliseBase"],"mappings":"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"}